kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: kube-controller-manager
  labels:
    k8s-on-k8s: kube-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-on-k8s: kube-controller-manager
  template:
    metadata:
      labels:
        k8s-on-k8s: kube-controller-manager
    spec:
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 65534
        runAsNonRoot: true
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: kube-controller-manager
          command:
            - ./hyperkube
            - controller-manager
            - '--kubeconfig=/etc/kubernetes/secrets/kubeconfig'
            - '--use-service-account-credentials'
            - '--allocate-node-cidrs=true'
            - '--configure-cloud-routes=false'
            - '--cluster-cidr=10.2.0.0/16'
            - '--root-ca-file=/etc/kubernetes/secrets/ca.crt'
            - '--service-account-private-key-file=/etc/kubernetes/secrets/service-account.key'
            - '--leader-elect=true'
            - '--cloud-provider='
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10252
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: secrets
              readOnly: true
              mountPath: /etc/kubernetes/secrets
            - name: ssl-host
              readOnly: true
              mountPath: /etc/ssl/certs
          terminationMessagePolicy: File
          image: gcr.io/google_containers/hyperkube:v1.7.2
      volumes:
        - name: secrets
          secret:
            secretName: kube-controller-manager
            defaultMode: 420
        - name: ssl-host
          hostPath:
            path: /usr/share/ca-certificates
